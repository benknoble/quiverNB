{
  "title": "Homework 4",
  "cells": [
    {
      "type": "latex",
      "language": "latex",
      "data": "Q1. Lower bounds on merge algorithm of mergesort\n1. Given two input arrays $L[1 \\dots m], R[1 \\dots m]$ of distinct, sorted elements, show that there are between $2^m$ and $4^m$ ways to interleave the two sequences into a single sorted list.\n\nConsider that we have $2m$ positions to put elements, and that by choosing a position for each of the $m$ elements in $L$, we fix the position for each of the elements in $R$ (and vice versa). Thus the problem is equivalent to choosing $m$ positions out of $2m$, or $\\binom{2m}{m} = \\frac{(2m)!}{(m!)^2} = \\frac{2^m(2m-1)!!}{m!}$.\n\nIt turns out that $\\binom{n}{r} \\ge \\left(\\frac{n}{r}\\right)^r$, so $\\binom{2m}{m} \\ge 2^m$ gives a lower bound (for a proof, consider an expansion of $\\binom{n}{r}$ into its product form, and that $\\forall 0 \\le i \\lt \\min(r,n) : \\frac{n-i}{r-i} \\ge \\frac{n}{r}$).\n\nFor the upper bound, we would need to show that $\\binom{2m}{m} \\le 4^m$.\nBy Stirling's approximation, for sufficiently large $m$ we have $\\binom{2m}{m} \\sim \\frac{4^m}{\\sqrt{m\\pi}} \\le 4^m$\n\n2. The number of comparisons with two lists is about twice as many as with a single list.\n\n3. Unrolled correct merge procedure produces a tree with at least one leaf for every possible interleaving of input $L$, $R$, since if it didn't there would be an input $L',R'$ that it fails to correctly merge. That is, if the tree lacked a leaf for a possible interleaving of $L,R$, we could construct an $L',R'$ such that the final sequence is the missing interleaving, and the merge algorithm would (by definition) return some other sequence that is incorrect.\n\n4. For a tree with at least $n$ leaves on the order of $2^m$ and $4^m = 2^{2m}$, the resulting tree would have a height at least $\\log_2{n} \\in \\Theta(m)$. That is, $n \\in \\Theta(2^m)$, thus $\\log_2{n} \\in \\Theta(m)$.\n\nQ2. Values of indicator variables\n\na. Hiring problem of $n$ candidates. $H_k$ indicates the $k$th candidate is hired because they are the best seen so far.\n\n$E\\left[H_k\\right] = \\frac{1}{k}$\n\n$E\\left[\\sum_{1 \\le k \\le n}{H_k}\\right] = \\sum_{1 \\le k \\le n}{E\\left[H_k\\right]} = \\sum_{1 \\le k \\le n}{\\frac{1}{k}} = n$th harmonic number.\n\nb. $n$ backpack-grabbing students. $X_i$ indicates the $i$th student got the right backpack.\n\n$E\\left[X_i\\right] = \\frac{1}{n}$\n\n$E\\left[\\sum_{1 \\le i \\le n}{X_i}\\right] = \\sum_{1 \\le i \\le n}{E\\left[X_i\\right]} = \\sum_{1 \\le i \\le n}{\\frac{1}{n}} = 1$\n\nc. $2n$ dangling string ends. $L_n$ indicates that with $n$ strings the randomly-chosen ends tied form a loop.\n\n$E\\left[L_n\\right] = \\frac{1}{2n-1}$\n\n$E\\left[\\sum_{1 \\le i \\le n}{L_i}\\right] = \\sum_{1 \\le i \\le n}{\\frac{1}{2i-1}}$. From wolframalpha, this can be expressed in terms of the harmonic numbers $H_n$ as $\\frac{1}{2}H_{n-\\frac{1}{2}} + \\log{2}$\n\nQ3. $A[1 \\dots n]$ is an array of distinct numbers. $i \\lt j \\land A[i] \\gt A[j] \\iff (i,j)$ is an inversion. Suppose $A$ forms a uniform random permutation of $\\langle1,2,\\dots,n\\rangle$. Use indicator random values to computed the expected number of inversions.\n\nLet $I_{ij}$ indicate that $(i,j)$ is an inversion for $1 \\le i \\lt j \\le n$.\nThen $E\\left[I_{ij}\\right] = \\frac{1}{2}$, so the expected number of inversions is $E\\left[\\sum_{i \\lt j}{I_{ij}}\\right] = \\sum_{i \\lt j}{E\\left[I_{ij}\\right]} = \\sum_{i \\lt j}{\\frac{1}{2}} = \\frac{n(n-1)}{4}$"
    }
  ]
}